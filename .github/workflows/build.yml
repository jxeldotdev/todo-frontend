name: Build docker image and run tests
on: ['push','pull_request']
    
jobs:
  run-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Cache NPM deps
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      
      - name: Install dependencies
        run: npm install --dev
      
      - name: run linters
        run: npm run lint
      
      - name: Run unit tests
        run: npm run test:unit

      - name: Test that app builds properly
        run: npm run build --minify

  docker-build-latest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Export variables
        id: vars
        run: |
          echo "::set-output name=branch_name::$(echo ${GITHUB_REF} | cut -d '/' -f 3 )"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os}}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - uses: actions/download-artifact@v2
        with:
          name: todo-frontend-${{ github.sha }}
          path: dist/

      - name: Build and push 
        uses: docker/build-push-action@v2
        if: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
        with:
          context: .
          push: true
          pull: true
          tags: joelfreeman/todo-frontend:${{ steps.vars.outputs.branch_name }}_${{ steps.vars.outputs.sha_short }}, joelfreeman/todo-frontend:latest
          cache-from: type=registry,ref=joelfreeman/todo-frontend:latest
          cache-to: type=inline

      - name: Build and push (tag)
        uses: docker/build-push-action@v2
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          context: .
          push: true
          pull: true
          tags: joelfreeman/todo-backend:${{ steps.vars.outputs.sha_short }}, jfreemxn/todo-frontend:${{ env.GIT_TAG_NAME }}, joelfreeman/todo-frontend:latest
          cache-from: type=registry,ref=joelfreeman/todo-frontend:latest
          cache-to: type=inline
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/joelfreeman/todo-frontend:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'